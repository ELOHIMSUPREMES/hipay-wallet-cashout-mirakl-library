{
  "name": "Mirakl",
  "apiVersion": 3.20,
  "description": "",
  "operations": {
    "GetVendors": {
      "httpMethod": "GET",
      "uri": "/api/shops",
      "summary": "Fetch all shops from Mirakl",
      "parameters": {
        "shopIds": {
          "type": "array",
          "required": false,
          "location": "query",
          "sentAs": "shop_ids",
          "filters" : [
            {
              "method": "join",
              "args" : [",", "@value"]
            }
          ]
        },
        "updatedSince": {
          "type": "object",
          "instanceOf" : "DateTime",
          "location": "query",
          "sentAs": "updated_since",
          "filters" : [
            {
              "method": "date_format",
              "args" : ["@value", "Y-m-d"]
            }
          ]
        },
        "paginate": {
          "type": "boolean",
          "default" : false,
          "description": "[optional] Control the pagination usage. Default: false (different from api)",
          "location": "query",
          "sentAs": "paginate",
          "filters" : [
            {
              "method": "json_encode",
              "args" : ["@value"]
            }
          ]
        }
      }
    },
    "GetDocuments": {
      "httpMethod": "GET",
      "uri": "/api/shops/documents",
      "summary": "List documents from Mirakl",
      "parameters": {
        "shopIds": {
          "type": "array",
          "required": true,
          "description": "",
          "location": "query",
          "sentAs": "shop_ids",
          "filters" : [
            {
              "method": "join",
              "args" : [",", "@value"]
            }
          ]
        }
      }
    },
    "DownloadDocuments": {
      "httpMethod": "GET",
      "uri": "/api/shops/documents/download",
      "summary": "Download documents from Mirakl",
      "parameters" : {
        "shopIds": {
          "type": "array",
          "required": false,
          "location": "query",
          "sentAs": "shop_ids",
          "filters" : [
            {
              "method": "join",
              "args" : [",", "@value"]
            }
          ]
        },
        "documentIds": {
          "type": "array",
          "required": false,
          "location": "query",
          "sentAs": "document_ids",
          "filters" : [
            {
              "method": "join",
              "args" : [",", "@value"]
            }
          ]
        },
        "typeCodes": {
          "type": "array",
          "required": false,
          "location": "query",
          "sentAs": "type_codes",
          "filters" : [
            {
              "method": "join",
              "args" : [",", "@value"]
            }
          ]
        }
      }
    },
    "GetInvoices":{
      "httpMethod": "GET",
      "uri": "/api/invoices",
      "summary": "List accounting documents",
      "parameters": {
        "shop": {
          "required": false,
          "type": "integer",
          "description": "[optional] Identifier of the shop for filtering",
          "location": "query",
          "sentAs": "shop"
        },
        "startDate": {
          "required": false,  
          "type": "object",
          "instanceOf" : "DateTime",
          "description": "creation date for filtering. Format: 'yyyy-MM-dd'T'HH:mm:ss'",
          "location": "query",
          "sentAs": "start_date",
          "filters" : [
            {
              "method": "date_format",
              "args" : ["@value", "Y-m-d\\TH:i:s\\Z"]
            }
          ]
        },
        "endDate": {
          "required": false,  
          "type": "object",
          "instanceOf" : "DateTime",
          "description": "creation date for filtering. Format: 'yyyy-MM-dd'T'HH:mm:ss'",
          "location": "query",
          "sentAs": "end_date",
          "filters" : [
            {
              "method": "date_format",
              "args" : ["@value", "Y-m-d\\TH:i:s\\Z"]
            }
          ]
        },
        "type": {
          "required": false,
          "type": "string",
          "description": "[optional] [ALL, AUTO_INVOICE, MANUAL_INVOICE, MANUAL_CREDIT] Type of the accounting document for filtering. Default value is AUTO_INVOICE which represent invoices generated by shop payment.",
          "location": "query",
          "sentAs": "type"
        },
        "currency": {
          "required": false,
          "type": "string",
          "description": "[optional] Currency iso code for filtering",
          "location": "query",
          "sentAs": "currency"
        }
      }
    },
    "DocumentTypesDto": {
      "httpMethod": "GET",
      "uri": "/api/documents",
      "summary": "Get the list of all documents configuration DO01",
      "parameters": {
        "entities": {
          "required": false,
          "type": "string",
          "description": "A comma separated list of values, representing the type of entities the document type should be related to. Ex: ORDER,SHOP",
          "location": "query",
          "sentAs": "entities"
        }
      }
    }
  }
}